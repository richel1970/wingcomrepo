# Drupal with PostgreSQL
#
# Access via "http://localhost:8080"
#   (or "http://$(docker-machine ip):8080" if using docker-machine)
#
# During initial Drupal setup,
# Database type: PostgreSQL
# Database name: postgres
# Database username: postgres
# Database password: example
# ADVANCED OPTIONS; Database host: postgres

version: '3'

services:

  drupal:
    image: drupal:latest
    restart: always
    expose:
      - 80
    volumes:
      - modules:/var/www/html/modules
      - profiles:/var/www/html/profiles
      - themes:/var/www/html/themes
      # this takes advantage of the feature in Docker that a new anonymous
      # volume (which is what we're creating here) will be initialized with the
      # existing content of the image at the same location
      - sites:/var/www/html/sites
    environment:
     VIRTUAL_HOST: drupal.wingcom.local

  postgres:
    image: postgres:10
    environment:
      POSTGRES_PASSWORD: drupal123
    restart: always

volumes:
  modules:
  profiles:
  themes:
  sites:

networks:
  default:
    external:
      name: nginx-reverseproxy
